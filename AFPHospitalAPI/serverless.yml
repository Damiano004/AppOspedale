# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: damiano004
# "service" is the name of this project. This will also be added to your AWS resource names.
service: AFPHospitalAPI

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role: ${file(./credentials.yml):IAM.role}
  environment:
    db_host: ${file(./credentials.yml):ENV.db_host}
    user: ${file(./credentials.yml):ENV.user}
    password: ${file(./credentials.yml):ENV.password}
    database: ${file(./credentials.yml):ENV.database}
    port: ${file(./credentials.yml):ENV.port}

functions: # AWS LAMBDA functions
  hello: # NOME
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get

  lista-pz:
    handler: pazienti.listaPz
    events:
      - httpApi:
          path: /lista-pz/{id}
          method: get

  lista-ospedali:
    handler: pazienti.listaOspedali
    events:
      - httpApi:
          path: /lista-ospedali
          method: get
    
  lista-reparti:
    handler: pazienti.listaRepartiOspedale
    events:
      - httpApi:
          path: /lista-reparti/{id}
          method: get

  accetta-pz:
    handler: pazienti.accettaPz
    events:
      - httpApi:
          path: /accetta-pz
          method: post
      
  accetta-pz-trasferta:
    handler: pazienti.accettaPzTrasferta
    events:
      - httpApi:
          path: /accetta-trasferta
          method: put
  
  accetta-pz-trasferta:
    handler: pazienti.modificaPaziente
    events:
      - httpApi:
          path: /modifica-pz
          method: put

  ## CODICE PZ
  trasferisci-pz:
    handler: pazienti.trasferisciPz
    events:
      - httpApi: 
          path: /trasferisci-pz/{idPz}/{idOs}
          method: put
  
  dimetti-pz: 
    handler: pazienti.dimettiPz
    events:
      - httpApi:
          path: /dimetti-pz/{id}
          method: delete

plugins:
  - serverless-offline